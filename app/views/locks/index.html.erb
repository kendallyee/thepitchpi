<h2>Details of lock</h2>


<div>
    <% @locks.group_by(&:group).each do |group, lock| %>
        <div class="card text-dark border-light mb-3" style="max-width: 20rem; min-width: 20rem">
            <div class="card-header">
                <div sytle="max-width: 5rem ">
                    <%= group %>
                    <button id="<%= lock.first.user_id %>" value= "<%= group %>" class='flygroup'>zoom</button>
                </div>
            </div>
            <% lock.each do |lock| %>
                <div class="card-body">
                    <div>
                        <h5 class="card-title float-left"><%= link_to lock.lock_name, user_lock_path(current_user.id, lock.id) %></h5>
                        <button class='fly' value='<%=lock.longitude%>' name='<%=lock.latitude%>'>Find</button>
                        <div class="float-right">
                            <!-- Rounded switch -->
                            <label class="switch">
                            <input type="checkbox" name="lock_status">
                            <span id="slider-<%= lock.id %>" class="slider round"></span>
                            </label>
                        </div>
                    </div>
                </div>
            <% end %>
        </div>
    <% end %>
    <button id="<%= @user %>" value= "All" class='flygroup'>All</button>
</div>










<div>
    <meta charset='utf-8' />
    <title>Locate the user</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css' rel='stylesheet' />
    <style>
        body { margin:0; padding:0;}
        #map {width:100%;height:400px }
    </style>
</head>


<div id="info"></div>
<div id='map'></div>








<script>
// Script ----------Script ----------Script ----------Script ----------Script ---------

// initialize map---------------------------------------------------------------------
mapboxgl.accessToken = 'pk.eyJ1IjoibG9ja25yb2xscy10ZWFtMSIsImEiOiJjam4xM3FvcDYxYnZuM2ttOThyYTc2cjFwIn0.LXhAvekTPkv8HSJvQd-32w';
var map = new mapboxgl.Map({
    container: 'map', // container id
    style: 'mapbox://styles/mapbox/dark-v9',
    center: [101.63060418023838, 3.1352744737826583], // starting position
    zoom: 15 // starting zoom

});
















// load 3D building to map----------------------------------------------------
map.on('load', function() {
    // Insert the layer beneath any symbol layer.
    var layers = map.getStyle().layers;

    var labelLayerId;
    for (var i = 0; i < layers.length; i++) {
        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {
            labelLayerId = layers[i].id;
            break;
        }
    }

    map.addLayer({
        'id': '3d-buildings',
        'source': 'composite',
        'source-layer': 'building',
        'filter': ['==', 'extrude', 'true'],
        'type': 'fill-extrusion',
        'minzoom': 15,
        'paint': {
            'fill-extrusion-color': '#aaa',

            // use an 'interpolate' expression to add a smooth transition effect to the
            // buildings as the user zooms in
            'fill-extrusion-height': [
                "interpolate", ["linear"], ["zoom"],
                15, 0,
                15.05, ["get", "height"]
            ],
            'fill-extrusion-base': [
                "interpolate", ["linear"], ["zoom"],
                15, 0,
                15.05, ["get", "min_height"]
            ],
            'fill-extrusion-opacity': .6
        }
    }, labelLayerId);
});



// existing locks tagged into map----------------------------------------------------
var geojson = {
  type: 'FeatureCollection',
  features: [
    <% @locks.each do |lock| %>
    {
    type: 'Feature',
    geometry: {
      type: 'Point',
      coordinates: [<%= lock.longitude %>, <%= lock.latitude %>]
    },
    properties: {
      title: "<%= lock.lock_name %>",
      group: "<%= lock.group %>",
      description: "<%= lock.status %>",
      link: "<%= user_lock_path(current_user.id, lock.id) %>"

    }
  },

  <% end %>
  ]
};


// add markers in html to map
geojson.features.forEach(function(marker) {

  // create a HTML element for each feature
  var el = document.createElement('div');
  el.className = 'marker';

  // make a marker for each feature and add to the map-------------
  new mapboxgl.Marker(el)
    .setLngLat(marker.geometry.coordinates)
    .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
    .setHTML('<h5><a href="'+ marker.properties.link +'">' + marker.properties.title + '</a></h5><small>' + marker.properties.group + '</small><h4>' + marker.properties.description + '</h4>'))
    .addTo(map);
});






// fly to individual marker--------------------------------------------------------
$(".fly").click(function() {
    // Fly to a random location by offsetting the point -74.50, 40
    // by up to 5 degrees.
    map.flyTo({
        center: [this.value, this.name],
        zoom: 19
    });
});






// fly to group-------------------------------------------------------------------------
$(".flygroup").click(function(e) {
  var place = this.value
    $.ajax({
      type: 'GET',
      url: '/locks/group_points',
      dataType:"json",
      data: {
        id: e.target.id,
        group: e.target.value
      },

      success: function(data) {
          var bbox = [
            [data.lngmax, data.latmax],
            [data.lngmin, data.latmin]
          ];
          map.fitBounds(bbox, {
            padding: {top: 100, bottom:100, left: 100, right: 100}
          });
      },
      error: function(error) {
        console.log(error);
      }
    });
  })





// Add geolocate present location control to the map-----------------------------------
map.addControl(new mapboxgl.GeolocateControl({
    positionOptions: {
        enableHighAccuracy: true
    },
    trackUserLocation: true
}));


// Add Navigation Controller
map.addControl(new mapboxgl.NavigationControl());

// Add Full screen BUtton
map.addControl(new mapboxgl.FullscreenControl());




</script>
