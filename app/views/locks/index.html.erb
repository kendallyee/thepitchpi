<h2>Details of lock</h2>

<div>
    <table>
        <tr>
            <th>Lock Name</th>
            <th>Status</th>
            <th>Group</th>
            <th>Location</th>
            <th>Action</th>
        </tr>
        <% @locks.each do |lock| %>
            <tr>
                <td><%= link_to lock.lock_name, user_lock_path(lock.id, current_user.id) %></td>
                <td><%= lock.status %></td>
                <td><%= lock.group %></td>
                <td><%= lock.location %></td>
                <td>Lock toggle</td>
            </tr>
        <% end %>
    </table>
</div>





<div>
    <meta charset='utf-8' />
    <title>Locate the user</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.49.0/mapbox-gl.css' rel='stylesheet' />
    <style>
        body { margin:0; padding:0;}
        #map {width:100%;height:400px }
    </style>
</head>



<div id='map'></div>
<pre id='coordinates' class='coordinates'></pre>

<button id='fly'>Fly</button>





<script>
// Script ----------Script ----------Script ----------Script ----------Script ---------
// initialize map
mapboxgl.accessToken = 'pk.eyJ1IjoibG9ja25yb2xscy10ZWFtMSIsImEiOiJjam4xM3FvcDYxYnZuM2ttOThyYTc2cjFwIn0.LXhAvekTPkv8HSJvQd-32w';
var map = new mapboxgl.Map({
    container: 'map', // container id
    style: 'mapbox://styles/mapbox/dark-v9',
    center: [101.63060418023838, 3.1352744737826583], // starting position
    zoom: 15 // starting zoom
});



// existing locks tagged into map
var geojson = {
  type: 'FeatureCollection',
  features: [
    <% @locks.each do |lock| %>
    {
    type: 'Feature',
    geometry: {
      type: 'Point',
      coordinates: [<%= lock.longitude %>, <%= lock.latitude %>]
    },
    properties: {
      title: "<%= lock.lock_name %>",
      group: "<%= lock.group %>",
      description: "<%= lock.status %>"
    }
  },

  <% end %>
  ]
};






// add markers in html to map
geojson.features.forEach(function(marker) {

  // create a HTML element for each feature
  var el = document.createElement('div');
  el.className = 'marker';

  // make a marker for each feature and add to the map
  new mapboxgl.Marker(el)
    .setLngLat(marker.geometry.coordinates)
    .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
    .setHTML('<h5>' + marker.properties.title + '</h5><small>' + marker.properties.group + '</small><h4>' + marker.properties.description + '</h4>'))
    .addTo(map);
});


// draggable
var marker = new mapboxgl.Marker({
    draggable: true
})
    .setLngLat([101.63060418023838, 3.1352744737826583])
    .addTo(map);

function onDragEnd() {
    var lngLat = marker.getLngLat();
    coordinates.style.display = 'block';
    coordinates.innerHTML = 'Longitude: ' + lngLat.lng + '<br />Latitude: ' + lngLat.lat;
}

marker.on('dragend', onDragEnd);




// fly to marker
document.getElementById('fly').addEventListener('click', function () {
    // Fly to a random location by offsetting the point -74.50, 40
    // by up to 5 degrees.
    map.flyTo({
        center: [101.63060418023838, 3.1352744737826583]
    });
});



// Add geolocate present location control to the map.
map.addControl(new mapboxgl.GeolocateControl({
    positionOptions: {
        enableHighAccuracy: true
    },
    trackUserLocation: true
}));
</script>
